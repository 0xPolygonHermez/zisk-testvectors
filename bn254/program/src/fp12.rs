use ziskos::bn254::fp12::{
    conjugate_fp12_bn254, exp_fp12_bn254, frobenius1_fp12_bn254, frobenius2_fp12_bn254,
    frobenius3_fp12_bn254, inv_fp12_bn254, mul_fp12_bn254, square_fp12_bn254,
};

pub fn fp12_tests() {
    // Multiplication
    let a = [
        10, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 13, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 10, 0, 0, 0, 2,
        0, 0, 0, 5, 0, 0, 0, 13, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0,
    ];
    let b = [
        78, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 193, 0, 0, 0, 20, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 69, 0, 0, 0, 27, 0, 0, 0,
    ];
    let res = mul_fp12_bn254(&a, &b);
    let res_exp = [
        0x3C208C16D87CEEDF,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000004854,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CFC78,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000003515,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000334,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000001A1E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CD67F,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000005BDE,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000E26,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000002470,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CF8B2,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000077D,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    assert_eq!(res, res_exp);

    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let b = [
        0x000000000000004E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000001,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000064,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000063,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000058,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000004D,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = mul_fp12_bn254(&a, &b);
    let res_exp = [
        0x3C208C16D87BE694,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000018D27,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87C4411,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000F3EF,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CF269,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000004B0B,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CE194,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x00000000000020A1,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CE7E5,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000001475,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CF984,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000001846,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    assert_eq!(res, res_exp);

    // Squaring
    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = square_fp12_bn254(&a);
    let res_exp = [
        0x3C208C16D87CB5AB,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000405C,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87C67FB,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000006103,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87C5221,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000125E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CF1B7,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000062C,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CE41F,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x00000000000000DC,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CFAD7,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x000000000000017E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    assert_eq!(res, res_exp);

    let a = [
        0x7085DE193B138426,
        0xC1F75626D129BB9D,
        0xF171A5964B4A73FC,
        0x1C79A2B7E874428F,
        0x9A4BD8B15FFFCAC6,
        0x1B72528B54157232,
        0x4C2E5F2DA100C8B9,
        0x075AB44C97D1EEE9,
        0x06D65CFFF8ECD53B,
        0x850CFA3FAA2B6FF0,
        0xE640E217E4EA51E3,
        0x2C4B5C50BB0E0500,
        0x5FF98BFC6420F102,
        0xB15E8F84A1D9FD4D,
        0x790AEEB5CB1B85D8,
        0x283AB2523808F078,
        0x2C95B3E5217D910D,
        0x1E48A80FECF18466,
        0xEEEEE24ADECDCB68,
        0x05DC3C18107C1FA0,
        0xE71ED1D2B7EFED2E,
        0xA30C782FE6E4A035,
        0x2D30EBD5043C6DA0,
        0x03212A0434BD6D7E,
        0x157673D3A1975EFB,
        0x9768379537CAA262,
        0x00F10AFC48A14223,
        0x19E16F30945592CA,
        0x69C8048AAD2DC026,
        0xB07860CFFC55B9D0,
        0x593534D0F4D63776,
        0x1E06F68EC21E6B71,
        0x94436E55D2AD8A6F,
        0xF1A03FFB3CC9919C,
        0x0EA42AC90778E6BB,
        0x01E9F266D91EF4E2,
        0x09AC1D4996D80AA9,
        0xE1352C3622C0E05D,
        0x7D0A84779BC0A069,
        0x0BDC2CC4D585D479,
        0xC35E88D1267354D6,
        0x253292D914F2FBA5,
        0x6BDAE62A12D9689A,
        0x18B92E8A03207996,
        0x66B0E885C52C7681,
        0xD34DCE7958CE53F6,
        0x7E5223D72CB1DC02,
        0x1EA5A9B287822FE1,
    ];
    let res = square_fp12_bn254(&a);
    let res_exp = [
        0xB9D2AC6B1DB3F403,
        0xB1AA40742816EEF4,
        0x1D02B721F6FAEFDC,
        0x04A370DC0C25EA60,
        0x3CA272A1E8E5C24B,
        0x7429D3D26F2E8253,
        0xD1D9D0D859226DBC,
        0x04154D4E027C2FDB,
        0xD569CDE9C690B278,
        0x96BFDC02DC720814,
        0x4085B7E6A49F7385,
        0x0F28D843A4826516,
        0x190ABAB89F963F75,
        0x3545A52BC23A0658,
        0x3971F77F8147146A,
        0x260C4831D421E60E,
        0xBA45931E976F488B,
        0x41934A66530C3C42,
        0x877C86EBF229EE21,
        0x22E3C188AD4A273F,
        0x627150F9B986BC2D,
        0x93D01357BCF2D03C,
        0x5D078CF441EBA715,
        0x1311A144A74F82EE,
        0x73647B2638B5B5CA,
        0xE7426CD320A659F0,
        0xB8A4A629ABB87F83,
        0x1FBAD19D45D4B91F,
        0xF6A92643AAEF7BA6,
        0x5F959DF84D0741F0,
        0x0D79E3EEDC145504,
        0x22B33F0DF73F1E13,
        0x2FA599E884F71439,
        0x9E8586E16BBDBFFD,
        0x7F4E6C09E6B965A9,
        0x0C509E7FEEA2B6CE,
        0xC6D454F781A8D6FB,
        0xCB95FBCF8AFC84FD,
        0xAF3DBC842B00FCEF,
        0x21249EC026244346,
        0x412483A5AE02797A,
        0x8FD022B086FE1912,
        0xC06D5165242C292B,
        0x29FA73ED6614343F,
        0x08845AA6ED8F2261,
        0xFA1057CEC21AC6B3,
        0x29D1D4C3831ACF00,
        0x000503CFB1C76D21,
    ];
    assert_eq!(res, res_exp);

    // Inversion
    let a = [0; 48];
    let res = inv_fp12_bn254(&a);
    let res_exp = a;
    assert_eq!(res, res_exp);

    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = inv_fp12_bn254(&a);
    let res_exp = [
        0x26F9CB414FB716C3,
        0xDBB56A8340B41000,
        0x62D66B21BE705F81,
        0x2E2E91A4FED56830,
        0x6BD1B5B647504BAE,
        0x385E21208C7639DF,
        0x228BBF868B6AC85E,
        0x288CFC066A8AC1B2,
        0x93F36969EC125583,
        0x0D93151BCFC083B6,
        0xDA739E8AC8244D48,
        0x260DCBE91AB565E2,
        0xD05D87196542A3CC,
        0xA7610EF87E30B812,
        0x6C98DC875C5B47CD,
        0x0EE26489D6EA3E59,
        0xCB28371E29E99F93,
        0xF78A41680EA645FC,
        0xA94232046FEC8751,
        0x2F3DF1695C35FD2E,
        0xEFC0C0D766387089,
        0x15C6AA34B188AFE4,
        0x7EAAB74255E2BB66,
        0x08197AD168C59123,
        0x251A4A8724E22AF7,
        0x191AA4F2CA097A43,
        0x6AAD3B70E8621AAF,
        0x06B4205B8B01757D,
        0x86CD60B1171A0C23,
        0xBEF3459759375014,
        0x0E7059E07B5B7675,
        0x1CDCF28014B342B6,
        0x1CA1F967773332D2,
        0x2DAC3CDB2DB4DB9A,
        0x2146F2B17B11F1CE,
        0x0E68EB686D3F23ED,
        0xA712E449A7F7E781,
        0xE7FF8E8272C2390D,
        0x1F0E4090C98BAAAA,
        0x00DFEE33550ED714,
        0x26A48D7B6170A01A,
        0x7EA503C3A84E2287,
        0xABD83941B145641F,
        0x12F28F228D369B12,
        0x7F2757A9AE6BFDD2,
        0x88BBBA3E68B51754,
        0x2322E75600EBE36C,
        0x108FD2AB89492880,
    ];
    assert_eq!(res, res_exp);

    // Conjugate
    let a = [
        0x7085DE193B138426,
        0xC1F75626D129BB9D,
        0xF171A5964B4A73FC,
        0x1C79A2B7E874428F,
        0x9A4BD8B15FFFCAC6,
        0x1B72528B54157232,
        0x4C2E5F2DA100C8B9,
        0x075AB44C97D1EEE9,
        0x06D65CFFF8ECD53B,
        0x850CFA3FAA2B6FF0,
        0xE640E217E4EA51E3,
        0x2C4B5C50BB0E0500,
        0x5FF98BFC6420F102,
        0xB15E8F84A1D9FD4D,
        0x790AEEB5CB1B85D8,
        0x283AB2523808F078,
        0x2C95B3E5217D910D,
        0x1E48A80FECF18466,
        0xEEEEE24ADECDCB68,
        0x05DC3C18107C1FA0,
        0xE71ED1D2B7EFED2E,
        0xA30C782FE6E4A035,
        0x2D30EBD5043C6DA0,
        0x03212A0434BD6D7E,
        0x157673D3A1975EFB,
        0x9768379537CAA262,
        0x00F10AFC48A14223,
        0x19E16F30945592CA,
        0x69C8048AAD2DC026,
        0xB07860CFFC55B9D0,
        0x593534D0F4D63776,
        0x1E06F68EC21E6B71,
        0x94436E55D2AD8A6F,
        0xF1A03FFB3CC9919C,
        0x0EA42AC90778E6BB,
        0x01E9F266D91EF4E2,
        0x09AC1D4996D80AA9,
        0xE1352C3622C0E05D,
        0x7D0A84779BC0A069,
        0x0BDC2CC4D585D479,
        0xC35E88D1267354D6,
        0x253292D914F2FBA5,
        0x6BDAE62A12D9689A,
        0x18B92E8A03207996,
        0x66B0E885C52C7681,
        0xD34DCE7958CE53F6,
        0x7E5223D72CB1DC02,
        0x1EA5A9B287822FE1,
    ];
    let res = conjugate_fp12_bn254(&a);
    let res_exp = [
        0x7085DE193B138426,
        0xC1F75626D129BB9D,
        0xF171A5964B4A73FC,
        0x1C79A2B7E874428F,
        0x9A4BD8B15FFFCAC6,
        0x1B72528B54157232,
        0x4C2E5F2DA100C8B9,
        0x075AB44C97D1EEE9,
        0x06D65CFFF8ECD53B,
        0x850CFA3FAA2B6FF0,
        0xE640E217E4EA51E3,
        0x2C4B5C50BB0E0500,
        0x5FF98BFC6420F102,
        0xB15E8F84A1D9FD4D,
        0x790AEEB5CB1B85D8,
        0x283AB2523808F078,
        0x2C95B3E5217D910D,
        0x1E48A80FECF18466,
        0xEEEEE24ADECDCB68,
        0x05DC3C18107C1FA0,
        0xE71ED1D2B7EFED2E,
        0xA30C782FE6E4A035,
        0x2D30EBD5043C6DA0,
        0x03212A0434BD6D7E,
        0x26AA184336E59E4C,
        0x001932FC30A7282B,
        0xB75F3ABA38E0163A,
        0x1682DF424CDC0D5F,
        0xD258878C2B4F3D21,
        0xE70909C16C1C10BC,
        0x5F1B10E58CAB20E6,
        0x125D57E41F1334B8,
        0xA7DD1DC105CF72D8,
        0xA5E12A962BA838F0,
        0xA9AC1AED7A0871A1,
        0x2E7A5C0C0812AB47,
        0x32746ECD41A4F29E,
        0xB64C3E5B45B0EA30,
        0x3B45C13EE5C0B7F3,
        0x248821AE0BABCBB0,
        0x78C20345B209A871,
        0x724ED7B8537ECEE7,
        0x4C755F8C6EA7EFC3,
        0x17AB1FE8DE112693,
        0xD56FA391135086C6,
        0xC4339C180FA37696,
        0x39FE21DF54CF7C5A,
        0x11BEA4C059AF7048,
    ];
    assert_eq!(res, res_exp);

    // Frobenius1
    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = frobenius1_fp12_bn254(&a);
    let res_exp = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CFD43,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0xD5A632FD9FE590A2,
        0xB297744CE992BABD,
        0x3AE36C9721322D64,
        0x1AD4A080032D3602,
        0xA56DEF6AFDE3B85D,
        0x77806CBAAF892C50,
        0x338D8221BF08BFC5,
        0x13D9C19AE8885822,
        0xF8B48433BD0E6969,
        0x06CD8FB7B73F5754,
        0x8EC68DD579C71128,
        0x1530B707F10AB4EA,
        0xD3812367BD5AFE43,
        0x42AC1A9597446365,
        0xE00C780636E92062,
        0x2D451A1BD61F98EB,
        0xE675327F6D4550B1,
        0xF1DE66363DA538BF,
        0xFFC2E59E756D1F03,
        0x128BF561B35E5E29,
        0xA2CE599482848A77,
        0x7784E276BB887715,
        0x719330EF8C64C3F4,
        0x10449291D41D2C50,
        0x14B51668179A174A,
        0x0017F4D3A569B638,
        0x74DB75361836C30D,
        0x2907C63A5F7B257D,
        0x6F8F21F5BEE5DC62,
        0xF0A6CE53BE09AB55,
        0x94CD379E31C81F99,
        0x1A376030D529FB4B,
    ];
    assert_eq!(res, res_exp);

    // Frobenius2
    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = frobenius2_fp12_bn254(&a);
    let res_exp = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0xB4F063F757FFFFF6,
        0x28BBF3B86048CD8C,
        0xC16C1B092426BA60,
        0x0000000000000001,
        0x8730281F807CFD51,
        0x6EC576D90828FD00,
        0xF6E42AAD5D5A9DFD,
        0x30644E72E131A027,
        0xD23FC428287CFD5B,
        0x46098320A7E02F73,
        0x35780FA43933E39D,
        0x30644E72E131A026,
        0x3C208C16D87CFD33,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x3C208C16D87CFD29,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x63B6F25A47FFFFF9,
        0xD2A0BB9BB9FF862B,
        0x7530F2A665CFD1B9,
        0x0000000000000002,
        0x8DC2305557FFFFBB,
        0x6554F023971FE162,
        0x3A070EB15949A595,
        0x0000000000000018,
    ];
    assert_eq!(res, res_exp);

    // Frobenius3
    let a = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000004,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000005,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000000A,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000014,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x000000000000001E,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000007,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000045,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
    ];
    let res = frobenius3_fp12_bn254(&a);
    let res_exp = [
        0x0000000000000002,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x3C208C16D87CFD43,
        0x97816A916871CA8D,
        0xB85045B68181585D,
        0x30644E72E131A029,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x0000000000000000,
        0x2B11FFCEB5C5BA46,
        0x6EF0D676082892D3,
        0xD0840187BB9687FE,
        0x2200A4A8C44051E1,
        0x31BC3A8080FE4890,
        0xB003A6C784717A23,
        0xEFE6269676875B30,
        0x25ECDEE769A07BFB,
        0xB3BAFFA778B4CFF7,
        0x75A12785D513C998,
        0x82E5AC3326F9683E,
        0x273DA345B3361DD6,
        0xA54FB729A66333B9,
        0xAB1BB950FA75AA00,
        0x14BF8736ED97CA9F,
        0x2318A021859244E2,
        0x55AB59976B37AC96,
        0xA5A3045B2ACC91CD,
        0xB88D60180C143959,
        0x1DD859112DD341FF,
        0x9952328255F872D0,
        0x1FFC881AACE95377,
        0x46BD14C6F51C9469,
        0x201FBBE10D1473D9,
        0x9F9C913640C5FB5D,
        0x5387F36576857827,
        0xEF89B2B74FF06696,
        0x15BEE2D5775BED93,
        0x26371873E908630F,
        0xDF13BB79839E87FA,
        0xE29B2D79D1CA4076,
        0x05CF43A43CD740EC,
    ];
    assert_eq!(res, res_exp);

    // Exponentiation
    let e = 0u64;
    let a = [0; 48];
    let res = exp_fp12_bn254(e, &a);
    let res_exp = a;
    assert_eq!(res, res_exp);

    let e = 10u64;
    let a = [0; 48];
    let res = exp_fp12_bn254(e, &a);
    let res_exp = a;
    assert_eq!(res, res_exp);

    let mut one = [0; 48];
    one[0] = 1;

    let e = 0u64;
    let mut a = one;
    let res = exp_fp12_bn254(e, &a);
    let res_exp = a;
    assert_eq!(res, res_exp);

    let e = 0u64;
    let mut a = [0; 48];
    a[0] = 2;
    let res = exp_fp12_bn254(e, &a);
    let res_exp = one;
    assert_eq!(res, res_exp);

    let e = 0x44E992B44A6909F1;
    let a = [
        0x7085DE193B138426,
        0xC1F75626D129BB9D,
        0xF171A5964B4A73FC,
        0x1C79A2B7E874428F,
        0x9A4BD8B15FFFCAC6,
        0x1B72528B54157232,
        0x4C2E5F2DA100C8B9,
        0x075AB44C97D1EEE9,
        0x06D65CFFF8ECD53B,
        0x850CFA3FAA2B6FF0,
        0xE640E217E4EA51E3,
        0x2C4B5C50BB0E0500,
        0x5FF98BFC6420F102,
        0xB15E8F84A1D9FD4D,
        0x790AEEB5CB1B85D8,
        0x283AB2523808F078,
        0x2C95B3E5217D910D,
        0x1E48A80FECF18466,
        0xEEEEE24ADECDCB68,
        0x05DC3C18107C1FA0,
        0xE71ED1D2B7EFED2E,
        0xA30C782FE6E4A035,
        0x2D30EBD5043C6DA0,
        0x03212A0434BD6D7E,
        0x157673D3A1975EFB,
        0x9768379537CAA262,
        0x00F10AFC48A14223,
        0x19E16F30945592CA,
        0x69C8048AAD2DC026,
        0xB07860CFFC55B9D0,
        0x593534D0F4D63776,
        0x1E06F68EC21E6B71,
        0x94436E55D2AD8A6F,
        0xF1A03FFB3CC9919C,
        0x0EA42AC90778E6BB,
        0x01E9F266D91EF4E2,
        0x09AC1D4996D80AA9,
        0xE1352C3622C0E05D,
        0x7D0A84779BC0A069,
        0x0BDC2CC4D585D479,
        0xC35E88D1267354D6,
        0x253292D914F2FBA5,
        0x6BDAE62A12D9689A,
        0x18B92E8A03207996,
        0x66B0E885C52C7681,
        0xD34DCE7958CE53F6,
        0x7E5223D72CB1DC02,
        0x1EA5A9B287822FE1,
    ];
    let res = exp_fp12_bn254(e, &a);
    let res_exp = [
        0xA339FC19399C8FCC,
        0x1C3A9719D1CC373F,
        0x4C1270DB9D45D256,
        0x130FF2E6E85F8AC7,
        0xE18A756C82DB8BF7,
        0x2A5A608DA5865D83,
        0x4A5168CD84528AD7,
        0x132B6697FAD496AE,
        0xD37EE7ED214D16DF,
        0x0A8351EB44488EDE,
        0xF4D5B82E43C2B339,
        0x271547B5976B5473,
        0x0E1C121F08CCD44B,
        0x24F372B5C815C65F,
        0x93D9D091717DE527,
        0x124A43233B3E569D,
        0xDB380FD5AB4A7770,
        0xDD086C2E5AB15448,
        0xA710D35F981C7BFB,
        0x1451DF1F188D82A6,
        0xAF76A9211EA1ADCD,
        0x73CC965B956FFFCA,
        0x34AC30ED233AFBB0,
        0x2899B63798B1CB59,
        0xE1AFAFC403939B1D,
        0xCBAC0805E503FD63,
        0x8692A057912D5D2F,
        0x2AE88834EA26FB20,
        0xE30DD06AC8DA1EB8,
        0x990A77FE291D3BAC,
        0x6882C88F5524E012,
        0x22BC7AECD2F3BEB4,
        0x9D054E3C6379BC20,
        0x8B73EE50F7F68B22,
        0xF1AE801590B1EA16,
        0x245E99159B410E57,
        0x0332679856928291,
        0x0CE6662357B122F7,
        0x21497855EF918598,
        0x19CC97AF043FEB4B,
        0xF3D2D11225E9BD82,
        0xEA7E2103A4B69D34,
        0x9C3456BFA96911B5,
        0x1EF6A30FE3AFDF1E,
        0xDEB4A4E48E77F734,
        0x90BF91B925DF33D5,
        0x3ED3C34E49161BDC,
        0x2CBA6E19A3250365,
    ];
    assert_eq!(res, res_exp);
}
